plugins {
    id 'java'
    id 'checkstyle'
    id 'maven-publish'
    id 'com.jfrog.bintray' version "$bintray"
    id 'net.minecrell.licenser' version "$licenser"
    id 'fabric-loom' version "$fabric_loom"
}

apply from: "dependencies.gradle"

logger.lifecycle("""
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	Building $project.mod_name
	Version: $project.mod_version
	Minecraft Version: $project.minecraft
	Fabric-Loader Version: $project.fabric_loader
	
	Output files will be in /build/libs
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
""")

repositories {
    mavenCentral()
    jcenter()
    maven { url = "https://jitpack.io" } // CCA please get a proper maven
}

dependencies {
    minecraft fabric.minecraft
    mappings fabric.yarn
    modImplementation fabric.fabric_loader

    modImplementation mods.fabric_api

    modApi(include(mods.cardinal_components))

    implementation libs.checker_qual

    optionalModNoDep optional.modmenu
    optionalMod optional.rei
}

minecraft {
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand (
                "mod_id": project.mod_id,
                "mod_name": project.mod_name,
                "mod_version": project.mod_version,
                "description": project.description,
                "license": project.license,
                "repo_owner": project.repo_owner,
                "repo_name": project.repo_name
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// Licenser
license {
    header = file('LICENSE_HEADER')
    include '**/*.java'
    style.java = 'BLOCK_COMMENT'
    ext {
        name = 'i509VCB<git@i509.me>'
    }
}

// Checkstyle
checkstyle {
    configFile = rootProject.file("checkstyle.xml")
    toolVersion = '8.25'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft
group = project.maven_group

//Publishing details
if (rootProject.file("private.gradle").exists()) {
    apply from: "private.gradle"
}

// TODO: Maven publishing on bintray

def optionalMod(String dep) {
    dependencies.modRuntime (dep) {
        exclude group: "net.fabricmc"
        exclude module: "nbt-crafting"
    }
    dependencies.modCompileOnly (dep) {
        exclude group: "net.fabricmc"
        exclude module: "nbt-crafting"
    }
}

def optionalModNoDep(String dep) {
    dependencies.modRuntime (dep) {
        transitive = false
    }
    dependencies.modCompileOnly (dep) {
        transitive = false
    }
}
